// Mocks generated by Mockito 5.2.0 from annotations
// in maryland_game_engine/test/data/stores/entity_attribute_value/reference/writable_reference_entity_attribute_value_store_test.dart.
// Do not manually edit this file.

import 'package:maryland_game_engine/data/primitives/entity_id.dart' as _i2;
import 'package:maryland_game_engine/data/stores/entity_attribute_value/reference/reference_entity_attribute_value_store.dart'
    as _i3;
import 'package:maryland_game_engine/data/stores/entity_attribute_value/reference/writable_reference_entity_attribute_value_store.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEntityId_0 extends _i1.Fake implements _i2.EntityId {}

class _FakeReferenceEntityAttributeValueStore_1 extends _i1.Fake
    implements _i3.ReferenceEntityAttributeValueStore {}

/// A class which mocks [ReferenceEntityAttributeValueStore].
///
/// See the documentation for Mockito's code generation for more information.
class MockReferenceEntityAttributeValueStore extends _i1.Mock
    implements _i3.ReferenceEntityAttributeValueStore {
  MockReferenceEntityAttributeValueStore() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Iterable<_i2.EntityId> listReferencingEntities(
          int? attributeId, _i2.EntityId? entityId) =>
      (super.noSuchMethod(
          Invocation.method(#listReferencingEntities, [attributeId, entityId]),
          returnValue: <_i2.EntityId>[]) as Iterable<_i2.EntityId>);
  @override
  _i2.EntityId get(_i2.EntityId? entityId, int? attributeId) =>
      (super.noSuchMethod(Invocation.method(#get, [entityId, attributeId]),
          returnValue: _FakeEntityId_0()) as _i2.EntityId);
}

/// A class which mocks [WritableReferenceEntityAttributeValueStore].
///
/// See the documentation for Mockito's code generation for more information.
class MockWritableReferenceEntityAttributeValueStore extends _i1.Mock
    implements _i4.WritableReferenceEntityAttributeValueStore {
  MockWritableReferenceEntityAttributeValueStore() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.ReferenceEntityAttributeValueStore get backingStore =>
      (super.noSuchMethod(Invocation.getter(#backingStore),
              returnValue: _FakeReferenceEntityAttributeValueStore_1())
          as _i3.ReferenceEntityAttributeValueStore);
  @override
  _i2.EntityId get(_i2.EntityId? entityId, int? attributeId) =>
      (super.noSuchMethod(Invocation.method(#get, [entityId, attributeId]),
          returnValue: _FakeEntityId_0()) as _i2.EntityId);
  @override
  Iterable<_i2.EntityId> listReferencingEntities(
          int? attributeId, _i2.EntityId? entityId) =>
      (super.noSuchMethod(
          Invocation.method(#listReferencingEntities, [attributeId, entityId]),
          returnValue: <_i2.EntityId>[]) as Iterable<_i2.EntityId>);
  @override
  dynamic set(_i2.EntityId? entityId, int? attributeId, _i2.EntityId? value) =>
      super.noSuchMethod(
          Invocation.method(#set, [entityId, attributeId, value]));
  @override
  dynamic moveTo(_i4.WritableReferenceEntityAttributeValueStore? store) =>
      super.noSuchMethod(Invocation.method(#moveTo, [store]));
}
